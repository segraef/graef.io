<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - Automate everything</title><link>https://segraef.github.io/graef.io/posts/</link><description>All Posts | Automate everything</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sebastian@graef.io (Sebastian Gräf)</managingEditor><webMaster>sebastian@graef.io (Sebastian Gräf)</webMaster><lastBuildDate>Wed, 04 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://segraef.github.io/graef.io/posts/" rel="self" type="application/rss+xml"/><item><title>Basic Markdown Syntax</title><link>https://segraef.github.io/graef.io/basic-markdown-syntax/</link><pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://segraef.github.io/graef.io/basic-markdown-syntax/</guid><description>&lt;p>This article offers a sample of basic Markdown syntax that can be used in Hugo content files.&lt;/p></description></item><item><title>Function Lock-Workstation locally and remotely</title><link>https://segraef.github.io/graef.io/function-lock-workstation-locally-and-remotely/</link><pubDate>Wed, 04 Aug 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://segraef.github.io/graef.io/function-lock-workstation-locally-and-remotely/</guid><description>You can do everything with PowerShell, as well as locking your workstation with one simple function call. Just call the LockWorkstation() function in user32.dll and that&amp;rsquo;s it! The fine thing is, it works on a local and a remote session.
1 2 3 Function Lock-WorkStation { rundll32.exe user32.dll, LockWorkStation } Reference Locking a Computer</description></item><item><title>Get Azure VM Cores (vCPUs) per Region</title><link>https://segraef.github.io/graef.io/get-azure-vm-cores-per-region/</link><pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://segraef.github.io/graef.io/get-azure-vm-cores-per-region/</guid><description>If you need a script which outputs you the overall VMCore amount per region, there you go. This is a snippet from a RunBook which iterates also through each subscription before, so you would get all amount of used cores per subscription as well as per region.
I took the advantage of using Get-AzVMUsage.
Snippet 1 2 3 4 5 6 7 8 9 10 11 12 $AzureLocations = Get-AzLocation | Select-Object DisplayName $Result = @() ForEach ($AzureLocation in $AzureLocations) { $CoreAmount = Get-AzVMUsage -Location $AzureLocation.</description></item><item><title>Get Local Account Memberships</title><link>https://segraef.github.io/graef.io/get-local-account-memberships/</link><pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://segraef.github.io/graef.io/get-local-account-memberships/</guid><description>Okay, yeah there are plenty of scripts out which give you local accounts via WMI or ADSI and yes scripts exist also which give you all local groups but there is not one which gives you both (of course there are also some) but what if you’re looking to implement this as a CustomScriptExtension to your Azure VM? Especially if the Custom Script Extension Output is limited to only 4096 characters?</description></item><item><title>Wordpress Basic Settings in config.php</title><link>https://segraef.github.io/graef.io/wordpress-basic-settings-in-configphp/</link><pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://segraef.github.io/graef.io/wordpress-basic-settings-in-configphp/</guid><description><![CDATA[The main configuration of WordPress is handled by wp-config.php which is responsible for database access, language, API keys, security and more. Anything changed in this file takes direct influence to your site’s settings and appearance. Settings set in wp-config.php are considered as global and overwrite all parameters in your admin panel.
General 1 2  define(&#39;WP_HOME&#39;, &#39;https://www.graef.io&#39;); // Main URL define(&#39;WP_SITEURL&#39;, &#39;https://www.graef.io&#39;); // Site URL   Deactivate Automatic Updates 1  define( &#39;AUTOMATIC_UPDATER_DISABLED&#39;, true );   Disable Filter for Uploads 1  define( &#39;ALLOW_UNFILTERED_UPLOADS&#39;, true );   Automatically Empty Recycle Bin 1 2  define (&#39;EMPTY_TRASH_DAYS&#39;, 7); define (&#39;EMPTY_TRASH_DAYS&#39;, 0);   Deactivate Editor for Themes and Plugins 1  define( &#39;DISALLOW_FILE_EDIT&#39;, true );   Set Default Theme for WordPress 1  define( &#39;WP_DEFAULT_THEME&#39;, &#39;default-theme-folder-name&#39; );   ]]></description></item><item><title>Markdown Syntax Guide</title><link>https://segraef.github.io/graef.io/markdown-syntax-guide/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate><author>Author</author><guid>https://segraef.github.io/graef.io/markdown-syntax-guide/</guid><description>&lt;p>This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p></description></item><item><title>Get Azure Active Directoy Tenant ID and Subscription ID</title><link>https://segraef.github.io/graef.io/get-aad-tenant-id-and-subscription-id/</link><pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate><author>Author</author><guid>https://segraef.github.io/graef.io/get-aad-tenant-id-and-subscription-id/</guid><description>Requirements Install the Azure PowerShell 1 Install-Module -Name Az -AllowClobber -Scope CurrentUser Get Tenant and Subscription Details during Login To get your Tenant ID / Name and Subscription ID / Name you have several options with PowerShell, one option is using
1 Connect-AzAccount which directly gives you your default Subscription Name as well as your default Tenant ID after logging in.
Get Tenant and Subscription details from the Context Another option is using</description></item><item><title>Get and Set Timezones via PowerShell remotely</title><link>https://segraef.github.io/graef.io/get-and-set-timezones-via-powershell-remotely/</link><pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate><author>Author</author><guid>https://segraef.github.io/graef.io/get-and-set-timezones-via-powershell-remotely/</guid><description>As published in my Technet Gallery Script Center here, you can get current timezones remotely via PowerShell with Get-Timezones. Get-Timezones is using WMI to communicate with your servers.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 Function Get-Timezones { &amp;lt;# .</description></item><item><title>How to adjust Windows Failover Cluster 'Response to Resource Failure' Policy</title><link>https://segraef.github.io/graef.io/how-to-adjust-windows-failover-cluster-response-to-resource-failure-policy/</link><pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate><author>Author</author><guid>https://segraef.github.io/graef.io/how-to-adjust-windows-failover-cluster-response-to-resource-failure-policy/</guid><description>The purpose of this article is to show how to adjust Windows Failover Cluster “Response to resource failure” policy.
If a Cluster Core Resource like File Share Witness or Disk Quorum is in a failing state and offline, the cluster runs into jeopardy and will fail once the active node gets rebooted as no vote can be set to the quorum. To avoid this you should decrease the value of time your cluster core resource attempts to restart.</description></item></channel></rss>