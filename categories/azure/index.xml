<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Azure - Category - Automate everything</title><link>https://segraef.github.io/graef.io/categories/azure/</link><description>Azure - Category - Automate everything</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sebastian@graef.io (Sebastian Gräf)</managingEditor><webMaster>sebastian@graef.io (Sebastian Gräf)</webMaster><lastBuildDate>Sun, 21 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://segraef.github.io/graef.io/categories/azure/" rel="self" type="application/rss+xml"/><item><title>Get Azure VM Cores (vCPUs) per Region</title><link>https://segraef.github.io/graef.io/get-azure-vm-cores-per-region/</link><pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://segraef.github.io/graef.io/get-azure-vm-cores-per-region/</guid><description>If you need a script which outputs you the overall VMCore amount per region, there you go. This is a snippet from a RunBook which iterates also through each subscription before, so you would get all amount of used cores per subscription as well as per region.
I took the advantage of using Get-AzVMUsage.
Snippet 1 2 3 4 5 6 7 8 9 10 11 12 $AzureLocations = Get-AzLocation | Select-Object DisplayName $Result = @() ForEach ($AzureLocation in $AzureLocations) { $CoreAmount = Get-AzVMUsage -Location $AzureLocation.</description></item><item><title>Get Local Account Memberships</title><link>https://segraef.github.io/graef.io/get-local-account-memberships/</link><pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://segraef.github.io/graef.io/get-local-account-memberships/</guid><description>Okay, yeah there are plenty of scripts out which give you local accounts via WMI or ADSI and yes scripts exist also which give you all local groups but there is not one which gives you both (of course there are also some) but what if you’re looking to implement this as a CustomScriptExtension to your Azure VM? Especially if the Custom Script Extension Output is limited to only 4096 characters?</description></item><item><title>Expired Azure Credentials</title><link>https://segraef.github.io/graef.io/expired-azure-credentials/</link><pubDate>Thu, 26 Oct 2017 15:00:50 +0800</pubDate><author>Author</author><guid>https://segraef.github.io/graef.io/expired-azure-credentials/</guid><description>In case you get this error below, this error is mostly due to outdated Modules or at least in this case the AzureRM module.
Your Azure credentials have not been set up or have expired, please run Login-AzureRMAccount to set up your Azure credentials.
Easily go ahead and update your PowerShell or Azure PowerShell Modules to the latest version 4.4.0 and it should be gone. You can do this while easily using Update-Module or just go ahead and use Install-Module AzureRm -Force</description></item></channel></rss>