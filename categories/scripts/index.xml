<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Scripts - Category - Automate everything</title><link>https://graef.io/categories/scripts/</link><description>Scripts - Category - Automate everything</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sebastian@graef.io (Sebastian Gräf)</managingEditor><webMaster>sebastian@graef.io (Sebastian Gräf)</webMaster><lastBuildDate>Sun, 04 Aug 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://graef.io/categories/scripts/" rel="self" type="application/rss+xml"/><item><title>Function Lock-Workstation locally and remotely</title><link>https://graef.io/function-lock-workstation-locally-and-remotely/</link><pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate><author>Author</author><guid>https://graef.io/function-lock-workstation-locally-and-remotely/</guid><description>You can do everything with PowerShell, as well as locking your workstation with one simple function call. Just call the LockWorkstation() function in user32.dll and that&amp;rsquo;s it! The fine thing is, it works on a local and a remote session.
1 2 3 Function Lock-WorkStation { rundll32.exe user32.dll, LockWorkStation } Reference Locking a Computer</description></item><item><title>Get Azure VM Cores (vCPUs) per Region</title><link>https://graef.io/get-azure-vm-cores-per-region/</link><pubDate>Thu, 21 Feb 2019 00:00:00 +0000</pubDate><author>Author</author><guid>https://graef.io/get-azure-vm-cores-per-region/</guid><description>If you need a script which outputs you the overall VMCore amount per region, there you go. This is a snippet from a RunBook which iterates also through each subscription before, so you would get all amount of used cores per subscription as well as per region.
I took the advantage of using Get-AzVMUsage.
Snippet 1 2 3 4 5 6 7 8 9 10 11 12 $AzureLocations = Get-AzLocation | Select-Object DisplayName $Result = @() ForEach ($AzureLocation in $AzureLocations) { $CoreAmount = Get-AzVMUsage -Location $AzureLocation.</description></item><item><title>Get Local Account Memberships</title><link>https://graef.io/get-local-account-memberships/</link><pubDate>Thu, 21 Feb 2019 00:00:00 +0000</pubDate><author>Author</author><guid>https://graef.io/get-local-account-memberships/</guid><description>Okay, yeah there are plenty of scripts out which give you local accounts via WMI or ADSI and yes scripts exist also which give you all local groups but there is not one which gives you both (of course there are also some) but what if you’re looking to implement this as a CustomScriptExtension to your Azure VM? Especially if the Custom Script Extension Output is limited to only 4096 characters?</description></item><item><title>Get and Set Timezones via PowerShell remotely</title><link>https://graef.io/get-and-set-timezones-via-powershell-remotely/</link><pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate><author>Author</author><guid>https://graef.io/get-and-set-timezones-via-powershell-remotely/</guid><description>As published in my Technet Gallery Script Center here, you can get current timezones remotely via PowerShell with Get-Timezones. Get-Timezones is using WMI to communicate with your servers.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 Function Get-Timezones { &amp;lt;# .</description></item></channel></rss>