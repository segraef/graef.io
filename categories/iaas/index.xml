<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>IaaS - Category - Automate everything</title><link>https://segraef.github.io/graef.io/categories/iaas/</link><description>IaaS - Category - Automate everything</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sebastian@graef.io (Sebastian Gräf)</managingEditor><webMaster>sebastian@graef.io (Sebastian Gräf)</webMaster><lastBuildDate>Sun, 21 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://segraef.github.io/graef.io/categories/iaas/" rel="self" type="application/rss+xml"/><item><title>Get Azure VM Cores (vCPUs) per Region</title><link>https://segraef.github.io/graef.io/get-azure-vm-cores-per-region/</link><pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://segraef.github.io/graef.io/get-azure-vm-cores-per-region/</guid><description>If you need a script which outputs you the overall VMCore amount per region, there you go. This is a snippet from a RunBook which iterates also through each subscription before, so you would get all amount of used cores per subscription as well as per region.
I took the advantage of using Get-AzVMUsage.
Snippet 1 2 3 4 5 6 7 8 9 10 11 12 $AzureLocations = Get-AzLocation | Select-Object DisplayName $Result = @() ForEach ($AzureLocation in $AzureLocations) { $CoreAmount = Get-AzVMUsage -Location $AzureLocation.</description></item><item><title>Get Local Account Memberships</title><link>https://segraef.github.io/graef.io/get-local-account-memberships/</link><pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://segraef.github.io/graef.io/get-local-account-memberships/</guid><description>Okay, yeah there are plenty of scripts out which give you local accounts via WMI or ADSI and yes scripts exist also which give you all local groups but there is not one which gives you both (of course there are also some) but what if you’re looking to implement this as a CustomScriptExtension to your Azure VM? Especially if the Custom Script Extension Output is limited to only 4096 characters?</description></item><item><title>How to adjust Windows Failover Cluster 'Response to Resource Failure' Policy</title><link>https://segraef.github.io/graef.io/how-to-adjust-windows-failover-cluster-response-to-resource-failure-policy/</link><pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate><author>Author</author><guid>https://segraef.github.io/graef.io/how-to-adjust-windows-failover-cluster-response-to-resource-failure-policy/</guid><description>The purpose of this article is to show how to adjust Windows Failover Cluster “Response to resource failure” policy.
If a Cluster Core Resource like File Share Witness or Disk Quorum is in a failing state and offline, the cluster runs into jeopardy and will fail once the active node gets rebooted as no vote can be set to the quorum. To avoid this you should decrease the value of time your cluster core resource attempts to restart.</description></item></channel></rss>