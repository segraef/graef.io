<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PowerShell on Automate everything </title>
    <link>https://graef.io/categories/powershell/</link>
    <description>Recent content in PowerShell on Automate everything </description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 01 Aug 2021 09:33:25 +0800</lastBuildDate>
    <atom:link href="https://graef.io/categories/powershell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to get a list of PowerShell Aliases</title>
      <link>https://graef.io/get-powershell-aliases/</link>
      <pubDate>Sun, 01 Aug 2021 09:33:25 +0800</pubDate>
      <guid>https://graef.io/get-powershell-aliases/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Today I learned&lt;/strong&gt; How to get a list of PowerShell Aliases.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;An alias is an alternate name for a cmdlet, function, executable file, including scripts. PowerShell includes a set of built-in aliases. You can add your own aliases to the current session and to your PowerShell profile.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Programmatically Create Azure Pipelines</title>
      <link>https://graef.io/programmatically-create-azure-pipelines/</link>
      <pubDate>Sat, 07 Mar 2020 13:10:29 +0800</pubDate>
      <guid>https://graef.io/programmatically-create-azure-pipelines/</guid>
      <description>&lt;p&gt;This script &lt;a href=&#34;https://github.com/segraef/New-AzPipeline&#34; target=&#34;_blank&#34; rel=&#34;noopener noreffer&#34;&gt;New-AzPipeline&lt;/a&gt; lets you programmatically create Azure Pipelines based on your folder structure.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Get-LogonHistory: Who was logged on to my server?</title>
      <link>https://graef.io/get-logonhistory-who-was-logged-on-to-my-server/</link>
      <pubDate>Thu, 05 Oct 2017 11:26:46 +0800</pubDate>
      <guid>https://graef.io/get-logonhistory-who-was-logged-on-to-my-server/</guid>
      <description>&lt;p&gt;Every System Administrator comes into a situation where you want to see who and how many users were logged on to your servers either via Remote Desktop or via script.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Get-PSVersions: Retrieve Powershell version remotely</title>
      <link>https://graef.io/get-psversions-retrieve-powershell-version-remotely/</link>
      <pubDate>Fri, 22 Sep 2017 11:51:06 +0800</pubDate>
      <guid>https://graef.io/get-psversions-retrieve-powershell-version-remotely/</guid>
      <description>&lt;p&gt;Okay at the end it’s a simple &lt;code&gt;$PSVersion&lt;/code&gt; wrapped in an &lt;code&gt;Invoke-Command&lt;/code&gt; but hey these simple things are needful in case you need to run it against of 100s of servers and not just locally. With the help of &lt;code&gt;Invoke-Command&lt;/code&gt; via WinRM and &lt;code&gt;$PSVersionTable.psversion&lt;/code&gt; wrapped in a foreach you can retrieve PowerShell version of your remote computers indifferent if you need to use credentials to run it against a different domain than you currently reside. Just use the below function &lt;code&gt;Get-PSVersions&lt;/code&gt;, simple but good.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Get-DellTags: Get Dell Tags and Express Service Code remotely</title>
      <link>https://graef.io/get-delltags-get-dell-tags-and-express-service-code-remotely/</link>
      <pubDate>Tue, 15 Aug 2017 11:40:27 +0800</pubDate>
      <guid>https://graef.io/get-delltags-get-dell-tags-and-express-service-code-remotely/</guid>
      <description>&lt;p&gt;Get DELL Tag and Express Service Code remotely for more than one computer.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Simulate-Activity: Simulate user mouse and keyboard input with PowerShell</title>
      <link>https://graef.io/simulate-activity-simulate-user-mouse-and-keyboard-input-with-powershell/</link>
      <pubDate>Thu, 10 Aug 2017 11:11:29 +0800</pubDate>
      <guid>https://graef.io/simulate-activity-simulate-user-mouse-and-keyboard-input-with-powershell/</guid>
      <description>&lt;p&gt;If you want to avoid or block coming up your screensaver locally or remotely, take this nice script.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Resolve DNS and IP addresses with PowerShell</title>
      <link>https://graef.io/resolve-dns-and-ip-addresses-with-powershell/</link>
      <pubDate>Mon, 10 Jul 2017 11:12:17 +0800</pubDate>
      <guid>https://graef.io/resolve-dns-and-ip-addresses-with-powershell/</guid>
      <description>&lt;p&gt;In this case we’re going to use the method GetHostAddresses of the Dns class of the Sytem.Net namespace.&#xA;For PowerShell 2.0 you can use following Windows PowerShell One Liners:&lt;/p&gt;&#xA;&lt;h3 id=&#34;name-to-ip-address-dns-forward&#34;&gt;Name to IP Address (DNS Forward)&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;System.Net.Dns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetHostAddresses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;graef.io&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;System.Net.Dns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetHostAddresses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;graef.io&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;IPAddressToString&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h3 id=&#34;ip-address-to-name-dns-reverse&#34;&gt;IP Address to Name (DNS Reverse)&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;no&#34;&gt;System.Net.Dns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]::&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GetHostbyAddress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;85.13.135.42&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;HostName&lt;/span&gt;              &lt;span class=&#34;n&#34;&gt;Aliases&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;AddressList&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;--------&lt;/span&gt;              &lt;span class=&#34;p&#34;&gt;-------&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;-----------&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;graef&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;io&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;      &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;85.13&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;py&#34;&gt;135&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;As of PowerShell 4.0 you can use the Cmdlet Resolve-DnsName as well as for both Forward and Reverse:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configure Cluster Quorum node weight settings</title>
      <link>https://graef.io/configure-cluster-quorum-node-weight-settings/</link>
      <pubDate>Fri, 23 Jun 2017 11:29:53 +0800</pubDate>
      <guid>https://graef.io/configure-cluster-quorum-node-weight-settings/</guid>
      <description>&lt;p&gt;While using SQL AlwaysOn in connection with a third node on a different location as a DR solution, the third node is needed only in case there is a real Disaster Recovery.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Show-Command: Get a GUI-Interface for any Powershell Cmdlet</title>
      <link>https://graef.io/show-command-get-a-gui-interface-for-any-powershell-cmdlet/</link>
      <pubDate>Sat, 15 Apr 2017 11:37:17 +0800</pubDate>
      <guid>https://graef.io/show-command-get-a-gui-interface-for-any-powershell-cmdlet/</guid>
      <description>&lt;p&gt;Have you ever wondered if there’s an opportunity to easily create a GUI out of every PowerShell Cmdlet?&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Install KB Hotfixes only if they are not installed</title>
      <link>https://graef.io/how-to-install-kb-hotfixes-only-if-they-are-not-installed/</link>
      <pubDate>Sun, 02 Apr 2017 11:20:43 +0800</pubDate>
      <guid>https://graef.io/how-to-install-kb-hotfixes-only-if-they-are-not-installed/</guid>
      <description>&lt;p&gt;I just wanted to share you a tiny snippet if you’re looking for a simple PowerShell liner to simply get a KB Hotfix installed. It also verifies if the KB is installed already.&lt;/p&gt;</description>
    </item>
    <item>
      <title>KMS: How to Find Windows Server Licensing Details</title>
      <link>https://graef.io/kms-how-to-find-windows-server-licensing-details/</link>
      <pubDate>Fri, 10 Mar 2017 11:13:41 +0800</pubDate>
      <guid>https://graef.io/kms-how-to-find-windows-server-licensing-details/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re searching for Windows Server Licensing and Activation Details of your Windows machine you can use following statements&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
