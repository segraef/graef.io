<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>IP - Tag - Automate everything</title><link>https://graef.io/tags/ip/</link><description>IP - Tag - Automate everything</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sebastian@graef.io (Sebastian Gräf)</managingEditor><webMaster>sebastian@graef.io (Sebastian Gräf)</webMaster><lastBuildDate>Sun, 10 Sep 2017 11:47:24 +0800</lastBuildDate><atom:link href="https://graef.io/tags/ip/" rel="self" type="application/rss+xml"/><item><title>Resolve-DnsNames: Resolve DNS or IP for multiple Computers</title><link>https://graef.io/resolve-dnsnames-resolve-dns-or-ip-for-multiple-computers/</link><pubDate>Sun, 10 Sep 2017 11:47:24 +0800</pubDate><author>Author</author><guid>https://graef.io/resolve-dnsnames-resolve-dns-or-ip-for-multiple-computers/</guid><description>Respective Microsoft&amp;rsquo;s Technet article regarding Resolve-DnsName I have created a function with the ability to run it against more than only one computer. Resolve-DnsNames performs a DNS name query resolution for the specified name.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 Function Resolve-DnsNames { &amp;lt;# .</description></item><item><title>Resolve DNS and IP addresses with PowerShell</title><link>https://graef.io/resolve-dns-and-ip-addresses-with-powershell/</link><pubDate>Mon, 10 Jul 2017 11:12:17 +0800</pubDate><author>Author</author><guid>https://graef.io/resolve-dns-and-ip-addresses-with-powershell/</guid><description><![CDATA[In this case we’re going to use the method GetHostAddresses of the Dns class of the Sytem.Net namespace. For PowerShell 2.0 you can use following Windows PowerShell One Liners:
Name to IP Address (DNS Forward) 1 2 [System.Net.Dns]::GetHostAddresses(&#39;graef.io&#39;) [System.Net.Dns]::GetHostAddresses(&#39;graef.io&#39;).IPAddressToString IP Address to Name (DNS Reverse) 1 2 3 4 5 [System.Net.Dns]::GetHostbyAddress(&#39;85.13.135.42&#39;) HostName Aliases AddressList -------- ------- ----------- graef.io {} {85.13.135.42} As of PowerShell 4.0 you can use the Cmdlet Resolve-DnsName as well as for both Forward and Reverse:]]></description></item></channel></rss>