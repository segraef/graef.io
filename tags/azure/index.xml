<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>azure - Tag - Automate everything</title><link>https://graef.io/tags/azure/</link><description>azure - Tag - Automate everything</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sebastian@graef.io (Sebastian Gräf)</managingEditor><webMaster>sebastian@graef.io (Sebastian Gräf)</webMaster><lastBuildDate>Sat, 07 Mar 2020 13:10:29 +0800</lastBuildDate><atom:link href="https://graef.io/tags/azure/" rel="self" type="application/rss+xml"/><item><title>Programmatically Create Azure Pipelines</title><link>https://graef.io/programmatically-create-azure-pipelines/</link><pubDate>Sat, 07 Mar 2020 13:10:29 +0800</pubDate><author>Author</author><guid>https://graef.io/programmatically-create-azure-pipelines/</guid><description>&lt;p>This script &lt;a href="https://github.com/segraef/New-AzPipeline" target="_blank" rel="noopener noreffer">New-AzPipeline&lt;/a> lets you programmatically create Azure Pipelines based on your folder structure.
It browses through your folder structure for pipeline.yml files and creates corresponding Azure Pipelines in Azure DevOps.
It has several features like creating pipelines based on a specific folder/module version, latest version or just creates all.
It also compares against existing Pipelines and skips these.&lt;/p></description></item><item><title>Get Azure VM Cores (vCPUs) per Region</title><link>https://graef.io/get-azure-vm-cores-per-region/</link><pubDate>Thu, 21 Feb 2019 00:00:00 +0000</pubDate><author>Author</author><guid>https://graef.io/get-azure-vm-cores-per-region/</guid><description>If you need a script which outputs you the overall VMCore amount per region, there you go. This is a snippet from a RunBook which iterates also through each subscription before, so you would get all amount of used cores per subscription as well as per region.
I took the advantage of using Get-AzVMUsage.
Snippet 1 2 3 4 5 6 7 8 9 10 11 12 $AzureLocations = Get-AzLocation | Select-Object DisplayName $Result = @() ForEach ($AzureLocation in $AzureLocations) { $CoreAmount = Get-AzVMUsage -Location $AzureLocation.</description></item></channel></rss>