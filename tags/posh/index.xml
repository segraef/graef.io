<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Posh - Tag - Automate everything</title><link>https://graef.io/tags/posh/</link><description>Posh - Tag - Automate everything</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 23 Jan 2023 16:12:12 +1000</lastBuildDate><atom:link href="https://graef.io/tags/posh/" rel="self" type="application/rss+xml"/><item><title>How to REST the Have I Been Pwned (HIBP) API</title><link>https://graef.io/how-to-rest-have-i-been-pwned-hibp-api/</link><pubDate>Mon, 23 Jan 2023 16:12:12 +1000</pubDate><author>Author</author><guid>https://graef.io/how-to-rest-have-i-been-pwned-hibp-api/</guid><description>&lt;p>Perform REST API requests to the &lt;a href="https://haveibeenpwned.com/API/v3" target="_blank" rel="noopener noreffer">HIBP API&lt;/a> to verify if your email or password have been involved in a data breach.&lt;/p></description></item><item><title>Understanding and Improving Your Cybersecurity Posture in 2023: The Importance of strong Passwords, 2FA and Awareness of Phishing Scams</title><link>https://graef.io/understanding-and-improving-your-cybersecurity-posture-the-importance-of-strong-passwords-2fa-and-awareness-of-phishing-scams/</link><pubDate>Mon, 23 Jan 2023 15:00:26 +1000</pubDate><author>Author</author><guid>https://graef.io/understanding-and-improving-your-cybersecurity-posture-the-importance-of-strong-passwords-2fa-and-awareness-of-phishing-scams/</guid><description>&lt;p>Cybersecurity is the practice of protecting internet-connected systems, including hardware, software, and data, from attack, damage, or unauthorized access. One aspect of cybersecurity is protecting personal information, such as passwords, account data but also your privacy. In this article, we revisit the basics in cyber security, as there are daily new attacks and ways hackers try to get personal data.&lt;/p></description></item><item><title>Fresh Development Setup within 10 Minutes using Winget</title><link>https://graef.io/fresh-development-machine-setup-using-winget-within-10-minutes/</link><pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate><author>Author</author><guid>https://graef.io/fresh-development-machine-setup-using-winget-within-10-minutes/</guid><description>&lt;p>Sometimes you have to setup your Laptop/Notebook fresh and also prepare your developer environment and tools you need. I noticed this again today when I rebooted my machine and spent almost 2 hours installing the tools I need to work.&lt;/p>
&lt;p>I have put together a list of commands you can use to prepare your environment using Windows Package Manager (WinGet) for you which gives you a kick start at the next reset and you can continue working directly after 10 minutes.&lt;/p></description></item><item><title>How to install and update Azure PowerShell 7</title><link>https://graef.io/how-to-install-powershell-7/</link><pubDate>Sat, 06 Mar 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://graef.io/how-to-install-powershell-7/</guid><description><![CDATA[<p>Let&rsquo;s keep it easy with these one-liner&rsquo;s you can use for Windows as well as Linux.</p>]]></description></item><item><title>Function Lock-Workstation locally and remotely</title><link>https://graef.io/function-lock-workstation-locally-and-remotely/</link><pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate><author>Author</author><guid>https://graef.io/function-lock-workstation-locally-and-remotely/</guid><description>&lt;p>You can do everything with PowerShell, as well as locking your workstation with one simple function call.&lt;/p></description></item><item><title>Get Local Account Memberships</title><link>https://graef.io/get-local-account-memberships/</link><pubDate>Thu, 21 Feb 2019 00:00:00 +0000</pubDate><author>Author</author><guid>https://graef.io/get-local-account-memberships/</guid><description><![CDATA[<p>Okay, yeah there are plenty of scripts out which give you local accounts via <code>WMI</code> or <code>ADSI</code> and yes scripts exist also which give you all local groups but there is not one which gives you both (of course there are also some) but what if youâ€™re looking to implement this as a CustomScriptExtension to your Azure VM?</p>]]></description></item><item><title>Get Azure Active Directoy Tenant ID and Subscription ID</title><link>https://graef.io/get-aad-tenant-id-and-subscription-id/</link><pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate><author>Author</author><guid>https://graef.io/get-aad-tenant-id-and-subscription-id/</guid><description></description></item><item><title>Get and Set Timezones via PowerShell remotely</title><link>https://graef.io/get-and-set-timezones-via-powershell-remotely/</link><pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate><author>Author</author><guid>https://graef.io/get-and-set-timezones-via-powershell-remotely/</guid><description><![CDATA[<p>As published in my Technet Gallery Script Center <a href="https://gallery.technet.microsoft.com/scriptcenter/Get-Timezones-PowerShell-24781869" target="_blank" rel="noopener noreffer">here</a>, you can get current timezones remotely via PowerShell with Get-Timezones. Get-Timezones is using <code>WMI</code> to communicate with your servers.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-powershell" data-lang="powershell"><span class="line"><span class="cl"><span class="kd">Function</span><span class="w"> </span><span class="nb">Get-Timezones</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="cm">&lt;#
</span></span></span><span class="line"><span class="cl"><span class="cm">    .</span><span class="sd">SYNOPSIS</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">    Retrieves timezones of local or remote computers via WMI.
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">    .</span><span class="sd">DESCRIPTION</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">    Retrieves timezones of local or remote computers via WMI.
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">    .PARAMETER ComputerName
</span></span></span><span class="line"><span class="cl"><span class="cm">    A single Computer or an array of computer names. The default is localhost ($env:COMPUTERNAME).
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">    .PARAMETER Credentials
</span></span></span><span class="line"><span class="cl"><span class="cm">    Commit Credentials for a different domain.
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">    .PARAMETER Verbose
</span></span></span><span class="line"><span class="cl"><span class="cm">    Run in Verbose Mode.
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">    .</span><span class="sd">EXAMPLE</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">    PS C:\&amp;amp;amp;amp;gt; Get-Timezones -ComputerName (gc &#39;C:\computers.txt&#39;) -Credentials Get-Credential
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">    ComputerName TimezoneName DaylightSaving TimezoneCaption
</span></span></span><span class="line"><span class="cl"><span class="cm">    ------------ ------------ -------------- ---------------
</span></span></span><span class="line"><span class="cl"><span class="cm">    SERVER01 W. Europe Standard Time yes (UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna
</span></span></span><span class="line"><span class="cl"><span class="cm">    SERVER02 W. Europe Standard Time yes (UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna
</span></span></span><span class="line"><span class="cl"><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">    .</span><span class="sd">NOTES</span><span class="cm">
</span></span></span><span class="line"><span class="cl"><span class="cm">    Author: Sebastian GrÃ¤f
</span></span></span><span class="line"><span class="cl"><span class="cm">    Website: https://graef.io
</span></span></span><span class="line"><span class="cl"><span class="cm">    Email: ps@graef.io
</span></span></span><span class="line"><span class="cl"><span class="cm">    Date: June 27, 2017
</span></span></span><span class="line"><span class="cl"><span class="cm">    PSVer: 3.0/4.0/5.0
</span></span></span><span class="line"><span class="cl"><span class="cm">    #&gt;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="nb">Cmdletbinding</span><span class="p">()]</span>
</span></span><span class="line"><span class="cl">    <span class="k">Param</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="nb">Parameter</span><span class="p">(</span><span class="na">ValueFromPipelineByPropertyName</span> <span class="p">=</span> <span class="vm">$true</span><span class="p">,</span> <span class="na">ValueFromPipeline</span> <span class="p">=</span> <span class="vm">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$ComputerName</span> <span class="p">=</span> <span class="nv">$Env:COMPUTERNAME</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="nb">Parameter</span><span class="p">(</span><span class="na">ValueFromPipelineByPropertyName</span> <span class="p">=</span> <span class="vm">$true</span><span class="p">,</span> <span class="na">ValueFromPipeline</span> <span class="p">=</span> <span class="vm">$true</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="n">ValidateNotNull</span><span class="p">()]</span>
</span></span><span class="line"><span class="cl">        <span class="p">[</span><span class="no">System.Management.Automation.PSCredential</span><span class="p">][</span><span class="n">System</span><span class="p">.</span><span class="py">Management</span><span class="p">.</span><span class="py">Automation</span><span class="p">.</span><span class="py">Credential</span><span class="p">()]</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$Credentials</span> <span class="p">=</span> <span class="p">[</span><span class="no">System.Management.Automation.PSCredential</span><span class="p">]::</span><span class="n">Empty</span>
</span></span><span class="line"><span class="cl">    <span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">Begin</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write-Verbose</span> <span class="s2">&#34; [</span><span class="p">$(</span><span class="nv">$MyInvocation</span><span class="p">.</span><span class="n">InvocationName</span><span class="p">)</span><span class="s2">] :: Start Process&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$Results</span> <span class="p">=</span> <span class="vm">@</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$ProgressCounter</span> <span class="p">=</span> <span class="mf">0</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">Process</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">foreach</span> <span class="p">(</span><span class="nv">$Computer</span> <span class="k">in</span> <span class="nv">$ComputerName</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nv">$ProgressCounter</span><span class="p">++</span>
</span></span><span class="line"><span class="cl">            <span class="nb">Write-Progress</span> <span class="n">-activity</span> <span class="s2">&#34;Running on </span><span class="nv">$Computer</span><span class="s2">&#34;</span> <span class="n">-status</span> <span class="s2">&#34;Please wait ...&#34;</span> <span class="n">-PercentComplete</span> <span class="p">((</span><span class="nv">$ProgressCounter</span> <span class="p">/</span> <span class="nv">$ComputerName</span><span class="p">.</span><span class="n">length</span><span class="p">)</span> <span class="p">*</span> <span class="mf">100</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="p">(</span><span class="nb">Test-Connection</span> <span class="nv">$Computer</span> <span class="n">-Count</span> <span class="mf">1</span> <span class="n">-Quiet</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nb">Write-Verbose</span> <span class="s2">&#34; [</span><span class="p">$(</span><span class="nv">$MyInvocation</span><span class="p">.</span><span class="n">InvocationName</span><span class="p">)</span><span class="s2">] :: Processing </span><span class="nv">$Computer</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="k">try</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$win32_timezone</span> <span class="p">=</span> <span class="nb">Get-WmiObject</span> <span class="n">-Class</span> <span class="n">win32_timezone</span> <span class="n">-ComputerName</span> <span class="nv">$Computer</span> <span class="n">-ErrorAction</span> <span class="n">Stop</span> <span class="n">-Credential</span> <span class="nv">$Credentials</span>
</span></span><span class="line"><span class="cl">                    <span class="k">if</span> <span class="p">(</span><span class="nv">$win32_timezone</span><span class="p">.</span><span class="py">DaylightBias</span> <span class="o">-eq</span> <span class="mf">0</span><span class="p">)</span> <span class="p">{</span> <span class="nv">$daylightsaving</span> <span class="p">=</span> <span class="s2">&#34;no&#34;</span> <span class="p">}</span> <span class="k">else</span> <span class="p">{</span> <span class="nv">$daylightsaving</span> <span class="p">=</span> <span class="s2">&#34;yes&#34;</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$obj</span> <span class="p">=</span> <span class="nb">New-Object</span> <span class="n">-Type</span> <span class="n">PSCustomObject</span> <span class="n">-Property</span> <span class="vm">@</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                        <span class="n">ComputerName</span>    <span class="p">=</span> <span class="nv">$Computer</span>
</span></span><span class="line"><span class="cl">                        <span class="n">TimezoneCaption</span> <span class="p">=</span> <span class="nv">$win32_timezone</span><span class="p">.</span><span class="py">Caption</span>
</span></span><span class="line"><span class="cl">                        <span class="n">TimezoneName</span>    <span class="p">=</span> <span class="nv">$win32_timezone</span><span class="p">.</span><span class="py">StandardName</span>
</span></span><span class="line"><span class="cl">                        <span class="n">DaylightSaving</span>  <span class="p">=</span> <span class="nv">$daylightsaving</span>
</span></span><span class="line"><span class="cl">                    <span class="p">}</span>
</span></span><span class="line"><span class="cl">                    <span class="nv">$Results</span> <span class="p">+=</span> <span class="nv">$obj</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">                <span class="k">catch</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="nb">Write-Verbose</span> <span class="s2">&#34; Host [</span><span class="nv">$Computer</span><span class="s2">] Failed with Error: </span><span class="p">$(</span><span class="nv">$Error</span><span class="p">[</span><span class="mf">0</span><span class="p">])</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="nb">Write-Verbose</span> <span class="s2">&#34; Host [</span><span class="nv">$Computer</span><span class="s2">] Failed Connectivity Test&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="nv">$Results</span> <span class="p">|</span> <span class="nb">select </span><span class="n">ComputerName</span><span class="p">,</span> <span class="n">TimezoneName</span><span class="p">,</span> <span class="n">DaylightSaving</span><span class="p">,</span> <span class="n">TimezoneCaption</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">End</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write-Progress</span> <span class="n">-activity</span> <span class="s2">&#34;Running on </span><span class="nv">$Computer</span><span class="s2">&#34;</span> <span class="n">-Status</span> <span class="s2">&#34;Completed.&#34;</span> <span class="n">-Completed</span>
</span></span><span class="line"><span class="cl">        <span class="nb">Write-Verbose</span> <span class="s2">&#34; [</span><span class="p">$(</span><span class="nv">$MyInvocation</span><span class="p">.</span><span class="n">InvocationName</span><span class="p">)</span><span class="s2">] :: End Process&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>This will give you following output:</p>]]></description></item><item><title>Set primary IP address order with multiple IP addresses on a NIC</title><link>https://graef.io/set-primary-ip-address-order-with-multiple-ip-addresses-on-a-nic/</link><pubDate>Sun, 26 Nov 2017 11:29:53 +0800</pubDate><author>Author</author><guid>https://graef.io/set-primary-ip-address-order-with-multiple-ip-addresses-on-a-nic/</guid><description>&lt;p>If youâ€™re running a webserver it may be you have to run different services on the same port and need to use multiple IP addresses on the same network interface. This can happen for SMTP or Exchange Servers using several connectors.&lt;/p></description></item><item><title>Get-LogonHistory: Who was logged on to my server?</title><link>https://graef.io/get-logonhistory-who-was-logged-on-to-my-server/</link><pubDate>Thu, 05 Oct 2017 11:26:46 +0800</pubDate><author>Author</author><guid>https://graef.io/get-logonhistory-who-was-logged-on-to-my-server/</guid><description>&lt;p>Every System Administrator comes into a situation where you want to see who and how many users were logged on to your servers either via Remote Desktop or via script.&lt;/p></description></item></channel></rss>