<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>automation on graef.io</title><link>https://segraef.github.io/graef.io/tags/automation/</link><description>Recent content in automation on graef.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© {year}</copyright><lastBuildDate>Sun, 21 Feb 2021 13:37:18 +0800</lastBuildDate><atom:link href="https://segraef.github.io/graef.io/tags/automation/index.xml" rel="self" type="application/rss+xml"/><item><title>Function Lock-Workstation locally and remotely</title><link>https://segraef.github.io/graef.io/archive/lock-workstation/</link><pubDate>Sun, 21 Feb 2021 13:37:18 +0800</pubDate><guid>https://segraef.github.io/graef.io/archive/lock-workstation/</guid><description>You can do everything with PowerShell, as well as locking your workstation with one simple function call. Just call the LockWorkstation() function in user32.dll and that&amp;rsquo;s it! The fine thing is, it works on a local and a remote session.
Function Lock-WorkStation { rundll32.exe user32.dll, LockWorkStation } Reference Locking a Computer</description></item><item><title>Get Azure VM Cores (vCPUs) per Region</title><link>https://segraef.github.io/graef.io/archive/az-cores-per-region/</link><pubDate>Sun, 21 Feb 2021 13:37:18 +0800</pubDate><guid>https://segraef.github.io/graef.io/archive/az-cores-per-region/</guid><description>If you need a script which outputs you the overall VMCore amount per region, there you go. This is a snippet from a RunBook which iterates also through each subscription before, so you would get all amount of used cores per subscription as well as per region.
I took the advantage of using Get-AzVMUsage.
$AzureLocations = Get-AzLocation | Select-Object DisplayName $Result = @() ForEach ($AzureLocation in $AzureLocations) { $CoreAmount = Get-AzVMUsage -Location $AzureLocation.</description></item></channel></rss>