<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on graef.io</title><link>https://segraef.github.io/graef.io/blog/</link><description>Recent content in Blogs on graef.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© {year}</copyright><lastBuildDate>Sun, 21 Feb 2021 21:09:10 +0800</lastBuildDate><atom:link href="https://segraef.github.io/graef.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Wordpress Basic Settings in config.php</title><link>https://segraef.github.io/graef.io/blog/wordpress-basic-settings-in-configphp/</link><pubDate>Sun, 21 Feb 2021 21:09:10 +0800</pubDate><guid>https://segraef.github.io/graef.io/blog/wordpress-basic-settings-in-configphp/</guid><description>The main configuration of WordPress is handled by wp-config.php which is responsible for database access, language, API keys, security and more. Anything changed in this file takes direct influence to your site’s settings and appearance. Settings set in wp-config.php are considered as global and overwrite all parameters in your admin panel.
General define('WP_HOME', 'https://www.graef.io'); // Main URL define('WP_SITEURL', 'https://www.graef.io'); // Site URL Deactivate Automatic Updates define( 'AUTOMATIC_UPDATER_DISABLED', true ); Disable Filter for Uploads define( 'ALLOW_UNFILTERED_UPLOADS', true ); Automatically Empty Recycle Bin&amp;lt; define ('EMPTY_TRASH_DAYS', 7); define ('EMPTY_TRASH_DAYS', 0); Deactivate Editor for Themes and Plugins define( 'DISALLOW_FILE_EDIT', true ); Set Default Theme for WordPress define( 'WP_DEFAULT_THEME', 'default-theme-folder-name' );</description></item><item><title>Get Azure VM Cores (vCPUs) per Region</title><link>https://segraef.github.io/graef.io/blog/az-cores-per-region/</link><pubDate>Sun, 21 Feb 2021 13:37:18 +0800</pubDate><guid>https://segraef.github.io/graef.io/blog/az-cores-per-region/</guid><description>If you need a script which outputs you the overall VMCore amount per region, there you go. This is a snippet from a RunBook which iterates also through each subscription before, so you would get all amount of used cores per subscription as well as per region.
I took the advantage of using Get-AzVMUsage.
$AzureLocations = Get-AzLocation | Select-Object DisplayName $Result = @() ForEach ($AzureLocation in $AzureLocations) { $CoreAmount = Get-AzVMUsage -Location $AzureLocation.</description></item><item><title>How to adjust Windows Failover Cluster 'Response to Resource Failure' Policy</title><link>https://segraef.github.io/graef.io/blog/fc/</link><pubDate>Mon, 01 Jan 2018 20:51:50 +0800</pubDate><guid>https://segraef.github.io/graef.io/blog/fc/</guid><description>The purpose of this article is to show how to adjust Windows Failover Cluster “Response to resource failure” policy.
If a Cluster Core Resource like File Share Witness or Disk Quorum is in a failing state and offline, the cluster runs into jeopardy and will fail once the active node gets rebooted as no vote can be set to the quorum. To avoid this you should decrease the value of time your cluster core resource attempts to restart.</description></item><item><title>Get and Set Timezones via PowerShell remotely</title><link>https://segraef.github.io/graef.io/blog/timezones/</link><pubDate>Wed, 28 Jun 2017 15:27:45 +0800</pubDate><guid>https://segraef.github.io/graef.io/blog/timezones/</guid><description>As published in my Technet Gallery Script Center here , you can get current timezones remotely via PowerShell with Get-Timezones. Get-Timezones is using WMI to communicate with your servers.
Function Get-Timezones { &amp;lt;# .SYNOPSIS Retrieves timezones of local or remote computers via WMI. .DESCRIPTION Retrieves timezones of local or remote computers via WMI. .PARAMETER ComputerName A single Computer or an array of computer names. The default is localhost ($env:COMPUTERNAME). .PARAMETER Credentials Commit Credentials for a different domain.</description></item></channel></rss>